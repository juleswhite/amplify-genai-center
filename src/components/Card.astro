---
export interface Props {
	title: string;
	description?: string;
	image?: string;
	link?: string;
	tag?: string;
	date?: string;
	author?: string;
	className?: string;
}

const { 
	title, 
	description, 
	image, 
	link, 
	tag, 
	date, 
	author,
	className = ""
} = Astro.props;

const Component = link ? 'a' : 'div';
---

<Component 
	href={link}
	class={`group bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden ${link ? 'hover:scale-105' : ''} ${className}`}
>
	{image && (
		<div class="aspect-video overflow-hidden">
			<img 
				src={image} 
				alt={title}
				class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
				loading="lazy"
			/>
		</div>
	)}
	
	<div class="p-6">
		{tag && (
			<div class="inline-flex items-center px-3 py-1 rounded-full bg-amber-100 text-amber-800 text-xs font-medium mb-3">
				{tag}
			</div>
		)}
		
		<h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-amber-600 transition-colors">
			{title}
		</h3>
		
		{description && (
			<p class="text-gray-600 mb-4 line-clamp-3">
				{description}
			</p>
		)}
		
		{(date || author) && (
			<div class="flex items-center text-sm text-gray-500 space-x-4">
				{date && (
					<div class="flex items-center">
						<svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
						</svg>
						{date}
					</div>
				)}
				{author && (
					<div class="flex items-center">
						<svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
						</svg>
						{author}
					</div>
				)}
			</div>
		)}

		{link && (
			<div class="flex items-center text-amber-600 font-medium mt-4 group-hover:text-amber-700 transition-colors">
				Learn more
				<svg class="w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
				</svg>
			</div>
		)}
	</div>
</Component>

<style>
	.line-clamp-3 {
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
</style>